% Inspired by Emelie!
% August 10 2015

\documentclass[10pt]{article} % if landscape here, this only change the page content orientation ...

% packages
\usepackage[default, osfigures,scale = 1]{opensans} % Use Open Sans
\usepackage{booktabs} % Make nice table
\usepackage{color} % color
\usepackage[dvipsnames, table]{xcolor} % More color and table enable table colouring
\usepackage{graphicx} % Add picture
\usepackage{fancyhdr} % Fancy fooder and header
\usepackage{float} % Taming the unruly figures
\usepackage{amssymb} % For squares and other math symbols
\usepackage{multicol} % Add multicols
% landscape page
% See http://texblog.org/2007/11/10/landscape-in-latex/
\usepackage[landscape, margin = 25pt, letterpaper]{geometry} % Landscape
\usepackage{hyperref} % Add hyperlink
\usepackage[skip = 2pt]{caption} % For removing caption prefix

% Define new colour
\usepackage{colortbl} % Make rows and columns and cell colourable!
\usepackage{xcolor} % So you can use hex color 
\definecolor{newBlue}{HTML}{00BFC4} % define new colour
\newcolumntype{b}{>{\columncolor{newBlue}}l}

% Set page margin, adapted from Emelie CLBC styling, so stylish :)
%\oddsidemargin -10pt
%\evensidemargin -10pt
%\marginparwidth 50pt
%\marginparsep 5pt
%\topmargin -0.2in
\headheight 2pt
%\textheight 8.8in
%\textwidth 6.25in
\hoffset = .5in % set horiontal margin
\renewcommand{\baselinestretch}{1.3} % set line spacing
\setlength{\parskip}{\smallskipamount} % set paragraph spacing
\raggedright % For left-justified text

\renewcommand\labelitemi{$\blacksquare$} % change bullet to black square
\setlength{\columnsep}{1.5cm} % change col separation

\pagecolor{gray} % Change page background colour

\usepackage{changepage} % Adjust margin http://ctan.org/pkg/changepage

% change margin command
% see http://tex.stackexchange.com/questions/588/how-can-i-change-the-margins-for-only-part-of-the-text
\def\changemargin#1#2{\list{}{\rightmargin#2\leftmargin#1}\item[]}
\let\endchangemargin=\endlist 

% Head and Feet
% \pagestyle{fancy}
% \fancyhf{} % clear all header and footer fields
% \fancyhead[CO]{Design in Sweden. Inspired by Emelie. Made in China.}
% \fancyfoot[C]{For Your Eyes Only \thepage}
% \renewcommand{\headrulewidth}{0pt} % no line in the header
% \renewcommand{\footrulewidth}{0.1pt}

% Title
% \title{A Simple Neater Report}
% \author{Emelie \& Ben}
% \date{\today{}}
% \maketitle

% Some hook that suppose to make figure caption goes on top, couldn't get it to work but ...
% Need more Emelie solution!
% see http://stackoverflow.com/questions/24657216/caption-above-figure-using-knitr
% <<captionabove, include=FALSE>>=
% f <- function(x, options) {
%    paste("\\end{kframe}\n", 
%          "\\caption{", options$capT, "}\n", 
%          hook_plot_tex(x, options), 
%          "\n\\begin{kframe}", sep = "")
%  }
%  knit_hooks$set(plot = f)
% @

% Main Document
\begin{document}
\pagestyle{empty}

\color{white}

% Load R packages and get data
<<library, echo = FALSE, message = FALSE, warning = FALSE>>=

library(dplyr)
library(ggthemes)
library(ggplot2)
library(grid)
library(gridExtra)
library(scales)
library(WDI)
library(xtable)

# Get World Bank Data Mobile subscriptions (per 100 people) and 
# Urban population (% of total) indicators between 1980 and 2014
wdi_data <- WDI(country = "all", 
           indicator = c("IT.CEL.SETS.P2","SP.URB.TOTL.IN.ZS"), 
           start = 1980, 
           end = 2014)

# Get metadata
metadata <- as.data.frame(WDI_data[2])

# Merge it with wdi data
wdi_cdata <- merge(wdi_data, metadata, by.x = "country", by.y = "country.country")

# Make pretty name for indicators
names(wdi_cdata)[1] <- "Country"
names(wdi_cdata)[3] <- "Year"
names(wdi_cdata)[4] <- "Cell/100 people"
names(wdi_cdata)[5] <- "Urban pop (% of total)"
@


% Make inline numbers
<<inlineNum, echo = FALSE, warning = FALSE, message = FALSE>>=

# Find top country and cell/100 people
inline_num <- filter(wdi_cdata, Year == 2013) %>% top_n(1, `Cell/100 people`)
Inum <- inline_num[,"Cell/100 people"]
Icountry <- inline_num[,"Country"]
@

% Header via minipage!
\begin{changemargin}{-2.2cm}{-1.1cm} 
\setlength{\fboxrule}{0pt} % remove the border
\fboxsep0pt % remove the padding
\fbox{\colorbox{gray!60}{
\begin{minipage}[c]{0.4\textwidth}
<<graph_donut, echo = FALSE, message = FALSE, warning = FALSE, fig.height = 2>>=

# Donut graph using ggplot2
# Some make up number for now
# see http://stackoverflow.com/questions/13615562/ggplot-donut-chart
dat1 <- data.frame(count=c(10, 90), category=c("Agree", "Disagree"))
dat2 <- data.frame(count=c(35, 65), category=c("Agree", "Disagree"))
dat3 <- data.frame(count=c(13, 87), category=c("Agree", "Disagree"))

# Add addition columns, needed for drawing with geom_rect.
# Should create a wrapper function in the future
dat1$fraction = dat1$count / sum(dat1$count)
dat1 = dat1[order(dat1$fraction), ]
dat1$ymax = cumsum(dat1$fraction)
dat1$ymin = c(0, head(dat1$ymax, n=-1))

dat2$fraction = dat2$count / sum(dat2$count)
dat2 = dat2[order(dat2$fraction), ]
dat2$ymax = cumsum(dat2$fraction)
dat2$ymin = c(0, head(dat2$ymax, n=-1))

dat3$fraction = dat3$count / sum(dat3$count)
dat3 = dat3[order(dat3$fraction), ]
dat3$ymax = cumsum(dat3$fraction)
dat3$ymin = c(0, head(dat3$ymax, n=-1))

# First donut
donut1 <- ggplot(dat1, aes(fill = category, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
  geom_rect(colour = NA) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_bw() +
  theme(panel.grid = element_blank(), # Remove elements and shrink all the margins
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.background = element_blank(),
        legend.position = "none",
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        legend.title = element_blank(),
        plot.margin = unit(c(-.1,-.6,-.6,-.6),"cm"),
        legend.margin = unit(c(0,0,-1,-1),"cm")) +
  annotate("text", x = 2, y = 1, label = "90%", size = 7, color = "white")

# Second donut
donut2 <- ggplot(dat2, aes(fill = category, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
  geom_rect(colour = NA) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_bw() +
  theme(panel.grid = element_blank(), # Remove elements and shrink all the margins
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.background = element_blank(),
        legend.position = "none",
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        legend.title = element_blank(),
        plot.margin = unit(c(-.1,-.6,-.6,-.6),"cm"),
        legend.margin = unit(c(0,0,-1,-1),"cm")) +
  annotate("text", x = 2, y = 1, label = "65%", size = 7, color = "white")

# Third donut
donut3 <- ggplot(dat3, aes(fill = category, ymax = ymax, ymin = ymin, xmax = 4, xmin = 3)) +
  geom_rect(colour = NA) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_bw() +
  theme(panel.grid = element_blank(), # Remove elements and shrink all the margins
        panel.border = element_blank(),
        panel.background = element_blank(),
        plot.background = element_blank(),
        legend.position = "none",
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        legend.title = element_blank(),
        plot.margin = unit(c(-.1,-.6,-.6,-.6),"cm"),
        legend.margin = unit(c(0,0,-1,-1),"cm")) +
  annotate("text", x = 2, y = 1, label = "87%", size = 7, color = "white")

# Use gridExtra grid.arrange function to make multiple plots
grid.arrange(donut1, donut2, donut3, nrow=1)
@
\end{minipage}
\begin{minipage}[c]{0.5\textwidth}
\begin{adjustwidth}{1.5em}{0em} % adjust left and right margin
\large{\textbf{\textcolor{green!80!yellow!50}{Did you know?}} At \textbf{\textcolor{TealBlue!80!yellow!50}{\Sexpr{sprintf("%3.1f",Inum/100)}}} 
mobile phones per person, \textbf{\textcolor{TealBlue!80!yellow!50}{\Sexpr{Icountry}}} has the highest mobile subscription density in the world?}
\end{adjustwidth}
\end{minipage}
% This is just a trick to extend the grey bar, need more Emelie Solution!
\begin{minipage}[c]{0.2\textwidth}
\textcolor{gray!60}{hello}
\end{minipage}}}
\end{changemargin}

% \nopagebreak\rule{\textwidth}{1pt}\nopagebreak

% Middle row via minipage
\begin{minipage}[t]{.6\textwidth}
\begin{figure}[H]
\caption*{\textcolor{green!80!yellow!50}{The Rise of Mobile Subscription!}}
% \captionsetup[figure]{labelformat=empty}
<<graph_barLine, echo = FALSE, warning = FALSE, fig.height = 4.2>>=

# set themes
theme_set(theme_tufte())

# Make left bar graph
bar_data <- filter(wdi_cdata, Year == 2013) %>% top_n(10, `Cell/100 people`)

bar <- ggplot(bar_data, aes(reorder(Country, `Cell/100 people`), `Cell/100 people`)) + 
  geom_bar(stat='identity', fill = "#00BFC4") + 
  coord_flip() + 
  labs(x = "") + 
  theme(axis.text = element_text(size = rel(.6), color = "grey70"),
        axis.title = element_text(size = rel(.7), color = "grey70"),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_line(color = "grey70")) +
   geom_text(aes(label = sprintf("%3.0f",`Cell/100 people`)), 
             hjust = +1.2, color = "white", size = rel(3),
                     plot.margin=unit(c(0,-.5,-.5,-.5), "cm")) + 
  geom_hline(yintercept = c(100, 200, 300), color = "white")

# Make right line graph
line_data <- filter(wdi_cdata , 
                    Country %in% c("World", "European Union", "OECD members", 
                                   "High income", "Low income", "Middle income", "North America"))

line_data$Country <- ifelse(line_data$Country == "European Union", "EU", line_data$Country)

# Convert into factor for sorting
line_data$group <- factor(line_data$Country)
line_data$group <- factor(line_data$group, levels = c("High income","Middle income", "Low income", "EU", "North America", "OECD members", "World"))

line <- ggplot(line_data, aes(Year, `Cell/100 people`, colour = group)) + 
  geom_line(size = .5) + 
  theme_fivethirtyeight() + 
  labs(x = "") +
  guides(col = guide_legend(nrow = 2, byrow = TRUE, title = "")) + 
  scale_color_manual(values=c("#525252","#737373","#969696","#1f78b4",
                              "#a6cee3","#b2df8a","#ff7f00")) +
  theme(axis.text = element_text(size = rel(.6), color = "grey70"),
        axis.title = element_text(size = rel(.7), color = "grey70"),
        axis.title.y = element_text(size = rel(.7), angle = 90),
        legend.text = element_text(size = rel(.6), color = "grey70"),
        legend.title = element_text(size = rel(.6), color = "grey70"),
        legend.key = element_blank(),
        panel.background = element_blank(),
        plot.background = element_blank(),
        legend.background = element_blank(),
        legend.key = element_rect(fill = "white"),
        plot.margin = unit(c(0.2, .5, 0,-.5), "cm"),
        legend.margin = unit(-1, "cm"))

# Use gridExtra grid.arrange function to make multiple plots
grid.arrange(bar, line, nrow = 1)
@
\end{figure}

% last row using minipage too
\begin{minipage}[c]{0.6\textwidth}
% This line set alternate row colours
{\rowcolors{2}{green!80!yellow!50}{green!70!yellow!40}
<<tablex, echo=FALSE, results='asis', warning=FALSE, message=FALSE>>=
table_data <- filter(wdi_cdata , country.income == "Aggregates" & Year == 2013 & Country %in% c("World", "European Union", "OECD members", "High income", "Low income", "Middle income", "North America")) %>% arrange(-`Cell/100 people`)

#kable(table_data[c(1,3,4,5)], row.names=FALSE, booktabs=TRUE, digits = 1)

axTable <- xtable(table_data[c(1,3,4,5)], digits = c(0,0,0,1,1),
       align = "lbc{1.5cm}c{1.5cm}c{2cm}", caption = "\\textcolor{green!80!yellow!50}{Mobile Subscription and Urban Population}")
print(axTable, include.rownames=FALSE, size = 'footnotesize', table.placement="H",
      caption.placement = getOption("xtable.caption.placement", "top"),
       add.to.row = list(pos = as.list(-1), command = "\\rowcolor{newBlue}")) # color header
@
}
\tiny{Data Source: \href{http://data.worldbank.org/indicator}{World Bank World Development Indicators}}
\end{minipage}
\hspace{.5cm} % adjust horizontal page bewteen minis!
\begin{minipage}[c]{0.3\textwidth}
\subsection*{\color{TealBlue!80!yellow!50} Anything is possible!}
\small{
We can include:
  \begin{itemize}
    \setlength\itemsep{-.2em} % change spacing
    \item Graph
    \item Table
    \item Paragraph
    \item Inline number
  \end{itemize}}
\end{minipage}
\end{minipage}
\begin{minipage}[t]{0.3\textwidth}
<<facetgraph, echo = FALSE, warning = FALSE, fig.height=13.5>>=

# Make facet scatter plot
scatter_data <- filter(wdi_cdata, Year == 2013)
scatter_data <- filter(scatter_data, country.income != "Aggregates")

# Convert into factor for sorting
scatter_data$group <- factor(scatter_data$country.income)
scatter_data$group <- factor(scatter_data$group, levels = c("High income: nonOECD","High income: OECD","Upper middle income","Lower middle income","Low income","Not classified"))     

# Add label to label Macau
scatter_data$label <- ifelse(scatter_data$Country == "Macao SAR, China", "Macau", "")

ggplot(scatter_data, aes(`Urban pop (% of total)`/100, `Cell/100 people`, color = group)) + 
  geom_point(size = rel(3)) + 
  geom_smooth(method=lm, se=FALSE) + 
  facet_wrap(~group, nrow=3) +
  labs(x = "Urban pop (% of total)") +
  guides(col = guide_legend(nrow = 2, byrow = TRUE, title="")) +
  scale_x_continuous(labels = percent) +
  theme(legend.position = "bottom",
        axis.text = element_text(size = rel(1.2), color = "grey70"),
        axis.title = element_text(size = rel(1.5), color = "grey70"),
        axis.ticks = element_line(color = "grey70"),
        legend.text = element_text(size = rel(1), color = "grey70"),
        strip.text = element_text(size = rel(1.5), color = "grey70")) +
  geom_text(aes(label = label), hjust=1.2, size = rel(5), color = "#00BFC4")
@

\begin{center}
\small\textcolor{green!80!yellow!50}{{Design in Sweden. Inspired by \textcolor{Lavender}{Emelie}. Made in China.}}
\end{center}

\end{minipage}

\end{document}